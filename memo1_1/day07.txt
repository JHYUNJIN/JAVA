static(정적인)
	멤버 변수의 종류
		static이 붙은 변수 : static변수, 클래스변수, 정적변수
		static이 안붙은 변수 : 인스턴 변수

	멤버 메소드의 종류
		static이 붙은 메소드 : static메소드, 클래스메소드, 정적메소드
		static이 안붙은 메소드 : 인스턴 메소드

	1. static 변수, 메소드는 객체를 생성하지 않아도 사용할 수 있다.

	2. static 변수는 객체와 상관없이 하나의 저장공간이므로 모든 객체가 공유해서 사용한다
	즉 모든 객체에서 공통으로 사용되는 것에 static을 붙이는 것을 고려한다.

	3. static 메소드는 인스턴스 변수를 사용할 수 없다.
	static 메소드가 메모리에 사용준비가 끝나도 인스턴스 변수는 new를 사용하여
	객체를 생성하기 전까지는 사용할 수 없기 때문이다.

	4. 클래스명.멤버명 으로 사용한다.

상속(inheritance)
	1. 기존에 선언된 클래스의 멤버(생성자는 제외)를 새롭게 만들 클래스에서 사용하고 싶을 때 상속을 받고 새로운 기능만 추가한다.
	2. 여러 클래스 선언 시 멤버가 겹치는 경우, 부모 클래스를 선언하고 공통멤버를 자식 클래스에게 상속해준다.


생성자 가져오는 단축키 : 컨트롤 쉬프트 s o
상속 문법 
	class Parents{
			Parents 멤버
	}

	class Child extends Parents{
			Parents,child멤버
	}

this()
	자기자신의 생성자를 의미한다.
	생성자 내부에서만 사용 가능하며 최상단에 작성해야 한다.

super : 부모의 참조값
	부모의 멤버에 접근할 때 사용한다.
this : 내 자신의 참조값

super() : 부모생성자
	자식 클래스의 타입의 객체로 부모필드에 접그할 수 있다.
	우리는 객체를 만들 때 자식 생성자만 호출하기 때문에, 자식필드만 메모리에 할당된다고 생각할 수 있다. 
	ex) Child ch = new Child();

	그러나 자식 생성자는 항상 부모 생성자를 호출하기 때문에
	자식 생성자 호출 시 부모의 생성자도 호출되며
	이는 자식의 필드를 초기화할 때 초기화하는것을 의미한다.
	즉, 자식 객체를 생성하게 되면 부모 객체도 생성하게 된다. (부모가 먼저 생성)
	부모 생성자를 호출하는 방법은 super()를 사용하면 된다.
	만약 super()를 작성하지 않더라도 컴파일러가 자동으로 작성해준다.

프로젝트는 폴더 경로를 지정해주는것이다
src 소스라는 폴더 안에 패키지를 만들어준다.
그러니까 폴더를 만들어주는 과정인것이다.
프로젝트 만들고 패키지 만들고

모든 자바 클래스는 오브젝트 클래스를 상속받는다.



매개변수의 갯수와 타입에 맞게 가져온다 : 오버로딩