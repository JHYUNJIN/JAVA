함수형 인터페이스
	인터페이스 중 추상 메소드를 하나만 가지고 있는 인터페이스를 함수형 인터페이스라고 한다.
	이 때 @functionInterface를 인터페이스 위에 작성하여 
	단 하나의 추상 메소드만 선언할 수 있도록 제한한다.

람다식(Lanmbda Expression)
	이름이 없는 메소드로서 변수처럼 사용이 가능하며, 매개변수로도 전달이 가능하다.
	함수형 인터페이스는 추상메소드가 한개만 선언되기 떄문에 메소드 이름이 필요없다.
	따라서 람다식을 익명 메소드(Anonymous Method)라고도 부른다.

람다식 문법
	1. (매개변수 형식 나열, ...) -> 리턴값;
	2. (매개변수 형식 나열, ...) -> {2개 이상의 문장 작성; return 리턴값;}
----------------------------------------------------------------------------------------------

예외처리
	에러 : 심각한 오류
	예외 : 덜 심각한 오류

예외처리 문법
	try{
		예외가 발생한 것 같은 문장
	}
	catch(예외이름 객체명) {
		예외 발생 시 실행할 문장
	}
	catch(예외이름 객체명) {
		예외 발생 시 실행할 문장
	}
	...
	finally { 
	 	예외 발생 상관없이 무조건 실행할 문장
		※ 외부 장치와 연결했을 경우 다시 닫을 때 주로 사용한다.	
	}
----------------------------------------------------------------------------------------------

API (Application Programming Interface)
	개발에 필요한 라이브러리들의 집합
	선배 개발자들이 만들어 놓은 소스코드
	
	- 내부 API
		JDK 설치 시 제공해주는 기본 API
		docs.oracle.com/javase

	- 외부 API
		선배 개발자들이 개발한 패키지 및 클래스들을 의미한다.
		보통 JAR파일로 배포하며 자바 프로젝트의 buildPath에 추가하여 사용할 수 있다.




















